# Load the MNIST digit recognition dataset into R
# http://yann.lecun.com/exdb/mnist/
# assume you have all 4 files and gunzip'd them
# creates train$n, train$x, train$y  and test$n, test$x, test$y
# e.g. train$x is a 60000 x 784 matrix, each row is one digit (28x28)
# call:  show_digit(train$x[5,])   to see a digit.
# brendan o'connor - gist.github.com/39760 - anyall.org

load_mnist <- function() {
  load_image_file <- function(filename) {
    ret = list()
    f = file(filename,'rb')
    readBin(f,'integer',n=1,size=4,endian='big')
    ret$n = readBin(f,'integer',n=1,size=4,endian='big')
    nrow = readBin(f,'integer',n=1,size=4,endian='big')
    ncol = readBin(f,'integer',n=1,size=4,endian='big')
    x = readBin(f,'integer',n=ret$n*nrow*ncol,size=1,signed=F)
    ret$x = matrix(x, ncol=nrow*ncol, byrow=T)
    close(f)
    ret
  }
  load_label_file <- function(filename) {
    f = file(filename,'rb')
    readBin(f,'integer',n=1,size=4,endian='big')
    n = readBin(f,'integer',n=1,size=4,endian='big')
    y = readBin(f,'integer',n=n,size=1,signed=F)
    close(f)
    y
  }
  train <<- load_image_file('train-images-idx3-ubyte')
  test <<- load_image_file('t10k-images-idx3-ubyte')
  
  train$y <<- load_label_file('train-labels-idx1-ubyte')
  test$y <<- load_label_file('t10k-labels-idx1-ubyte')  
}


## Show MNIST images
show_digit <- function(arr784, col=gray(12:1/12), ...) {
  image(matrix(arr784, nrow=28)[,28:1], col=col, ...)
}


load_mnist()

numImages <- 2000
V <- train$x[1:numImages, ]
V <- t(V)
## Each column of V is an image

n <- nrow(V)
m <- ncol(V)
r <- 49

V <- V / 255
W <- abs(matrix(rnorm(n*r), nrow = n, ncol = r))
H <- abs(matrix(rnorm(r*m), nrow = r, ncol = m))

eps <- 10^(-20)
error <- c()

## Takes a few minutes
for(nIter in 1:500){
  
  if(nIter %% 50 == 0)
    cat("Iteration", nIter, "\n")
  
  H <- H * ((t(W) %*% V) / (t(W) %*% W %*% H + eps))
  W <- W * ((V %*% t(H)) / (W %*% H %*% t(H) + eps))
  error[nIter] <- sum((V - W %*% H)^2)
 
}

## Plot error over iterations
plot(1:length(error), error, type = 'l', xlab = "Iteration", ylab = "Sqr Error", main = "Error over MNIST")

## Save reconstructed image
NewV <- W %*% H

## Show 2 random images
par(mfrow=c(2,2))
randImages <- sample(1:numImages, 2, replace = FALSE)
show_digit(V[,randImages[1]])
show_digit(NewV[,randImages[1]])
show_digit(V[,randImages[2]])
show_digit(NewV[,randImages[2]])

## Show 9 random basis functions
randBasis <- sample(1:49, 16, replace = FALSE)
par(mfrow=c(4,4))
for(i in randBasis){
  show_digit(W[,i])
}
